/*
 * GoDaddy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ErrorLimit struct for ErrorLimit
type ErrorLimit struct {
	// Short identifier for the error, suitable for indicating the specific error within client code
	Code string `json:"code"`
	// List of the specific fields, and the errors found with their contents
	Fields *[]ErrorField `json:"fields,omitempty"`
	// Human-readable, English description of the error
	Message *string `json:"message,omitempty"`
	// Number of seconds to wait before attempting a similar request
	RetryAfterSec int32 `json:"retryAfterSec"`
}

// NewErrorLimit instantiates a new ErrorLimit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorLimit(code string, retryAfterSec int32) *ErrorLimit {
	this := ErrorLimit{}
	this.Code = code
	this.RetryAfterSec = retryAfterSec
	return &this
}

// NewErrorLimitWithDefaults instantiates a new ErrorLimit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorLimitWithDefaults() *ErrorLimit {
	this := ErrorLimit{}
	return &this
}

// GetCode returns the Code field value
func (o *ErrorLimit) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrorLimit) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrorLimit) SetCode(v string) {
	o.Code = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *ErrorLimit) GetFields() []ErrorField {
	if o == nil || o.Fields == nil {
		var ret []ErrorField
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLimit) GetFieldsOk() (*[]ErrorField, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ErrorLimit) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []ErrorField and assigns it to the Fields field.
func (o *ErrorLimit) SetFields(v []ErrorField) {
	o.Fields = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorLimit) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLimit) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorLimit) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorLimit) SetMessage(v string) {
	o.Message = &v
}

// GetRetryAfterSec returns the RetryAfterSec field value
func (o *ErrorLimit) GetRetryAfterSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RetryAfterSec
}

// GetRetryAfterSecOk returns a tuple with the RetryAfterSec field value
// and a boolean to check if the value has been set.
func (o *ErrorLimit) GetRetryAfterSecOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RetryAfterSec, true
}

// SetRetryAfterSec sets field value
func (o *ErrorLimit) SetRetryAfterSec(v int32) {
	o.RetryAfterSec = v
}

func (o ErrorLimit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["retryAfterSec"] = o.RetryAfterSec
	}
	return json.Marshal(toSerialize)
}

type NullableErrorLimit struct {
	value *ErrorLimit
	isSet bool
}

func (v NullableErrorLimit) Get() *ErrorLimit {
	return v.value
}

func (v *NullableErrorLimit) Set(val *ErrorLimit) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorLimit) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorLimit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorLimit(val *ErrorLimit) *NullableErrorLimit {
	return &NullableErrorLimit{value: val, isSet: true}
}

func (v NullableErrorLimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorLimit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


