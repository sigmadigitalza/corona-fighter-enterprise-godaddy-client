/*
 * GoDaddy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainForwardingMask struct for DomainForwardingMask
type DomainForwardingMask struct {
	// Displays at the top of the browser window and in search results.
	Title *string `json:"title,omitempty"`
	// A short description of your website to display in search engine results.
	Description *string `json:"description,omitempty"`
	// A list of comma-separated keywords that describes the content and purpose of your website.
	Keywords *string `json:"keywords,omitempty"`
}

// NewDomainForwardingMask instantiates a new DomainForwardingMask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainForwardingMask() *DomainForwardingMask {
	this := DomainForwardingMask{}
	return &this
}

// NewDomainForwardingMaskWithDefaults instantiates a new DomainForwardingMask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainForwardingMaskWithDefaults() *DomainForwardingMask {
	this := DomainForwardingMask{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *DomainForwardingMask) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainForwardingMask) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *DomainForwardingMask) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *DomainForwardingMask) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DomainForwardingMask) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainForwardingMask) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DomainForwardingMask) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DomainForwardingMask) SetDescription(v string) {
	o.Description = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *DomainForwardingMask) GetKeywords() string {
	if o == nil || o.Keywords == nil {
		var ret string
		return ret
	}
	return *o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainForwardingMask) GetKeywordsOk() (*string, bool) {
	if o == nil || o.Keywords == nil {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *DomainForwardingMask) HasKeywords() bool {
	if o != nil && o.Keywords != nil {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given string and assigns it to the Keywords field.
func (o *DomainForwardingMask) SetKeywords(v string) {
	o.Keywords = &v
}

func (o DomainForwardingMask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Keywords != nil {
		toSerialize["keywords"] = o.Keywords
	}
	return json.Marshal(toSerialize)
}

type NullableDomainForwardingMask struct {
	value *DomainForwardingMask
	isSet bool
}

func (v NullableDomainForwardingMask) Get() *DomainForwardingMask {
	return v.value
}

func (v *NullableDomainForwardingMask) Set(val *DomainForwardingMask) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainForwardingMask) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainForwardingMask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainForwardingMask(val *DomainForwardingMask) *NullableDomainForwardingMask {
	return &NullableDomainForwardingMask{value: val, isSet: true}
}

func (v NullableDomainForwardingMask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainForwardingMask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


