/*
 * GoDaddy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DomainsContactsBulk struct for DomainsContactsBulk
type DomainsContactsBulk struct {
	ContactAdmin *Contact `json:"contactAdmin,omitempty"`
	ContactBilling *Contact `json:"contactBilling,omitempty"`
	ContactPresence *Contact `json:"contactPresence,omitempty"`
	ContactRegistrant *Contact `json:"contactRegistrant,omitempty"`
	ContactTech *Contact `json:"contactTech,omitempty"`
	// An array of domain names to be validated against. Alternatively, you can specify the extracted tlds. However, full domain names are required if the tld is `uk`
	Domains []string `json:"domains"`
	// Canadian Presence Requirement (CA)
	EntityType *string `json:"entityType,omitempty"`
}

// NewDomainsContactsBulk instantiates a new DomainsContactsBulk object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainsContactsBulk(domains []string) *DomainsContactsBulk {
	this := DomainsContactsBulk{}
	this.Domains = domains
	return &this
}

// NewDomainsContactsBulkWithDefaults instantiates a new DomainsContactsBulk object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainsContactsBulkWithDefaults() *DomainsContactsBulk {
	this := DomainsContactsBulk{}
	return &this
}

// GetContactAdmin returns the ContactAdmin field value if set, zero value otherwise.
func (o *DomainsContactsBulk) GetContactAdmin() Contact {
	if o == nil || o.ContactAdmin == nil {
		var ret Contact
		return ret
	}
	return *o.ContactAdmin
}

// GetContactAdminOk returns a tuple with the ContactAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetContactAdminOk() (*Contact, bool) {
	if o == nil || o.ContactAdmin == nil {
		return nil, false
	}
	return o.ContactAdmin, true
}

// HasContactAdmin returns a boolean if a field has been set.
func (o *DomainsContactsBulk) HasContactAdmin() bool {
	if o != nil && o.ContactAdmin != nil {
		return true
	}

	return false
}

// SetContactAdmin gets a reference to the given Contact and assigns it to the ContactAdmin field.
func (o *DomainsContactsBulk) SetContactAdmin(v Contact) {
	o.ContactAdmin = &v
}

// GetContactBilling returns the ContactBilling field value if set, zero value otherwise.
func (o *DomainsContactsBulk) GetContactBilling() Contact {
	if o == nil || o.ContactBilling == nil {
		var ret Contact
		return ret
	}
	return *o.ContactBilling
}

// GetContactBillingOk returns a tuple with the ContactBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetContactBillingOk() (*Contact, bool) {
	if o == nil || o.ContactBilling == nil {
		return nil, false
	}
	return o.ContactBilling, true
}

// HasContactBilling returns a boolean if a field has been set.
func (o *DomainsContactsBulk) HasContactBilling() bool {
	if o != nil && o.ContactBilling != nil {
		return true
	}

	return false
}

// SetContactBilling gets a reference to the given Contact and assigns it to the ContactBilling field.
func (o *DomainsContactsBulk) SetContactBilling(v Contact) {
	o.ContactBilling = &v
}

// GetContactPresence returns the ContactPresence field value if set, zero value otherwise.
func (o *DomainsContactsBulk) GetContactPresence() Contact {
	if o == nil || o.ContactPresence == nil {
		var ret Contact
		return ret
	}
	return *o.ContactPresence
}

// GetContactPresenceOk returns a tuple with the ContactPresence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetContactPresenceOk() (*Contact, bool) {
	if o == nil || o.ContactPresence == nil {
		return nil, false
	}
	return o.ContactPresence, true
}

// HasContactPresence returns a boolean if a field has been set.
func (o *DomainsContactsBulk) HasContactPresence() bool {
	if o != nil && o.ContactPresence != nil {
		return true
	}

	return false
}

// SetContactPresence gets a reference to the given Contact and assigns it to the ContactPresence field.
func (o *DomainsContactsBulk) SetContactPresence(v Contact) {
	o.ContactPresence = &v
}

// GetContactRegistrant returns the ContactRegistrant field value if set, zero value otherwise.
func (o *DomainsContactsBulk) GetContactRegistrant() Contact {
	if o == nil || o.ContactRegistrant == nil {
		var ret Contact
		return ret
	}
	return *o.ContactRegistrant
}

// GetContactRegistrantOk returns a tuple with the ContactRegistrant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetContactRegistrantOk() (*Contact, bool) {
	if o == nil || o.ContactRegistrant == nil {
		return nil, false
	}
	return o.ContactRegistrant, true
}

// HasContactRegistrant returns a boolean if a field has been set.
func (o *DomainsContactsBulk) HasContactRegistrant() bool {
	if o != nil && o.ContactRegistrant != nil {
		return true
	}

	return false
}

// SetContactRegistrant gets a reference to the given Contact and assigns it to the ContactRegistrant field.
func (o *DomainsContactsBulk) SetContactRegistrant(v Contact) {
	o.ContactRegistrant = &v
}

// GetContactTech returns the ContactTech field value if set, zero value otherwise.
func (o *DomainsContactsBulk) GetContactTech() Contact {
	if o == nil || o.ContactTech == nil {
		var ret Contact
		return ret
	}
	return *o.ContactTech
}

// GetContactTechOk returns a tuple with the ContactTech field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetContactTechOk() (*Contact, bool) {
	if o == nil || o.ContactTech == nil {
		return nil, false
	}
	return o.ContactTech, true
}

// HasContactTech returns a boolean if a field has been set.
func (o *DomainsContactsBulk) HasContactTech() bool {
	if o != nil && o.ContactTech != nil {
		return true
	}

	return false
}

// SetContactTech gets a reference to the given Contact and assigns it to the ContactTech field.
func (o *DomainsContactsBulk) SetContactTech(v Contact) {
	o.ContactTech = &v
}

// GetDomains returns the Domains field value
func (o *DomainsContactsBulk) GetDomains() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetDomainsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Domains, true
}

// SetDomains sets field value
func (o *DomainsContactsBulk) SetDomains(v []string) {
	o.Domains = v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *DomainsContactsBulk) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsContactsBulk) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *DomainsContactsBulk) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *DomainsContactsBulk) SetEntityType(v string) {
	o.EntityType = &v
}

func (o DomainsContactsBulk) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContactAdmin != nil {
		toSerialize["contactAdmin"] = o.ContactAdmin
	}
	if o.ContactBilling != nil {
		toSerialize["contactBilling"] = o.ContactBilling
	}
	if o.ContactPresence != nil {
		toSerialize["contactPresence"] = o.ContactPresence
	}
	if o.ContactRegistrant != nil {
		toSerialize["contactRegistrant"] = o.ContactRegistrant
	}
	if o.ContactTech != nil {
		toSerialize["contactTech"] = o.ContactTech
	}
	if true {
		toSerialize["domains"] = o.Domains
	}
	if o.EntityType != nil {
		toSerialize["entityType"] = o.EntityType
	}
	return json.Marshal(toSerialize)
}

type NullableDomainsContactsBulk struct {
	value *DomainsContactsBulk
	isSet bool
}

func (v NullableDomainsContactsBulk) Get() *DomainsContactsBulk {
	return v.value
}

func (v *NullableDomainsContactsBulk) Set(val *DomainsContactsBulk) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainsContactsBulk) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainsContactsBulk) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainsContactsBulk(val *DomainsContactsBulk) *NullableDomainsContactsBulk {
	return &NullableDomainsContactsBulk{value: val, isSet: true}
}

func (v NullableDomainsContactsBulk) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainsContactsBulk) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


