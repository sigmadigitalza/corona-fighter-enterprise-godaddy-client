/*
 * GoDaddy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VerificationDomainName struct for VerificationDomainName
type VerificationDomainName struct {
	// Status of the domain name verification
	Status string `json:"status"`
}

// NewVerificationDomainName instantiates a new VerificationDomainName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationDomainName(status string) *VerificationDomainName {
	this := VerificationDomainName{}
	this.Status = status
	return &this
}

// NewVerificationDomainNameWithDefaults instantiates a new VerificationDomainName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationDomainNameWithDefaults() *VerificationDomainName {
	this := VerificationDomainName{}
	return &this
}

// GetStatus returns the Status field value
func (o *VerificationDomainName) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VerificationDomainName) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VerificationDomainName) SetStatus(v string) {
	o.Status = v
}

func (o VerificationDomainName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableVerificationDomainName struct {
	value *VerificationDomainName
	isSet bool
}

func (v NullableVerificationDomainName) Get() *VerificationDomainName {
	return v.value
}

func (v *NullableVerificationDomainName) Set(val *VerificationDomainName) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationDomainName) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationDomainName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationDomainName(val *VerificationDomainName) *NullableVerificationDomainName {
	return &NullableVerificationDomainName{value: val, isSet: true}
}

func (v NullableVerificationDomainName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationDomainName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


