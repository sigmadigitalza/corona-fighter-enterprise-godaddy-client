/*
 * GoDaddy API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ErrorField struct for ErrorField
type ErrorField struct {
	// Short identifier for the error, suitable for indicating the specific error within client code
	Code string `json:"code"`
	// Human-readable, English description of the problem with the contents of the field
	Message *string `json:"message,omitempty"`
	// <ul> <li style='margin-left: 12px;'>JSONPath referring to a field containing an error</li> <strong style='margin-left: 12px;'>OR</strong> <li style='margin-left: 12px;'>JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`</li> </ul>
	Path string `json:"path"`
	// JSONPath referring to a field containing an error, which is referenced by `path`
	PathRelated *string `json:"pathRelated,omitempty"`
}

// NewErrorField instantiates a new ErrorField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorField(code string, path string) *ErrorField {
	this := ErrorField{}
	this.Code = code
	this.Path = path
	return &this
}

// NewErrorFieldWithDefaults instantiates a new ErrorField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorFieldWithDefaults() *ErrorField {
	this := ErrorField{}
	return &this
}

// GetCode returns the Code field value
func (o *ErrorField) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrorField) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrorField) SetCode(v string) {
	o.Code = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ErrorField) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorField) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ErrorField) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ErrorField) SetMessage(v string) {
	o.Message = &v
}

// GetPath returns the Path field value
func (o *ErrorField) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *ErrorField) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *ErrorField) SetPath(v string) {
	o.Path = v
}

// GetPathRelated returns the PathRelated field value if set, zero value otherwise.
func (o *ErrorField) GetPathRelated() string {
	if o == nil || o.PathRelated == nil {
		var ret string
		return ret
	}
	return *o.PathRelated
}

// GetPathRelatedOk returns a tuple with the PathRelated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorField) GetPathRelatedOk() (*string, bool) {
	if o == nil || o.PathRelated == nil {
		return nil, false
	}
	return o.PathRelated, true
}

// HasPathRelated returns a boolean if a field has been set.
func (o *ErrorField) HasPathRelated() bool {
	if o != nil && o.PathRelated != nil {
		return true
	}

	return false
}

// SetPathRelated gets a reference to the given string and assigns it to the PathRelated field.
func (o *ErrorField) SetPathRelated(v string) {
	o.PathRelated = &v
}

func (o ErrorField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if o.PathRelated != nil {
		toSerialize["pathRelated"] = o.PathRelated
	}
	return json.Marshal(toSerialize)
}

type NullableErrorField struct {
	value *ErrorField
	isSet bool
}

func (v NullableErrorField) Get() *ErrorField {
	return v.value
}

func (v *NullableErrorField) Set(val *ErrorField) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorField) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorField(val *ErrorField) *NullableErrorField {
	return &NullableErrorField{value: val, isSet: true}
}

func (v NullableErrorField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


